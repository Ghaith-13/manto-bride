# Uncomment this line to define a global platform for your project
platform :ios, '13.0' # Ensure this matches your project's minimum iOS version.

# CocoaPods analytics sends network stats synchronously, which can affect Flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Function to retrieve the Flutter root path
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Flutter setup
flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! # Required for Firebase and other modern dependencies
  use_modular_headers! # Avoid issues with non-modular headers

  # Install all Flutter iOS pods
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # RunnerTests target
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# Post-install configuration for additional settings
post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Additional Flutter build settings
    flutter_additional_ios_build_settings(target)

    # Allow non-modular includes for problematic pods
    target.build_configurations.each do |config|
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
  end
end
